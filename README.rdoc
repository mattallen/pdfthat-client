= pdfthat-client

This gem allows you to play nicely with http://pdfth.at/

== Requirements

* HTTParty >= 0.5.2

== Installation

This library is intended to be installed as a Gem.

  $ gem install pdfthat-client

You might need administrator privileges on your system to install it.

== Getting Started

You'll need an API token to use this gem, head over to http://pdfth.at/ to sign up for one, development accounts are free and can be used straight away.

Include the gem in your Gemfile
  
  gem "pdfthat-client", :require => "pdfthat"  
  
If using rails, Initialise the library in a preinitializer

  Pdfthat.configure do |pdf|
    pdf.token = "<token goes here>"
  end
  
Otherwise, initialise it before you use it.

== Usage

To convert an accessible URL to a PDF, using the standard pdfTHAT queue

  Pdfthat.create_document(:document => {:url => "http://google.com.au/"})

The results of that call will be similar to:

  {"s3_bucket"=>"bucket",
   "media_type"=>"screen",
   "created_at"=>"Mon Feb 22 00:30:56 UTC 2010",
   "upload_time"=>nil,
   "upload_results"=>nil,
   "error_messages"=>[],
   "uuid"=>"76f93970-0177-012d-4131-0026b0d759a2",
   "updated_at"=>"Mon Feb 22 00:30:56 UTC 2010",
   "postback_url"=>nil,
   "url"=>"http://google.com.au/",
   "render_time"=>nil,
   "storage_url"=>
    "http://s3.amazonaws.com/bucket/76f93970-0177-012d-4131-0026b0d759a2.pdf",
   "return_pdf"=>false,
   "id"=>202,
   "successful"=>true,
   "user_id"=>1,
   "styles"=>nil,
   "render_results"=>nil,
   "media"=>"screen",
   "development"=>false,
   "workflow_state"=>"new",
   "wait_for_pdf"=>false,
   "postback_time"=>nil,
   "html_string"=>nil,
   "postback_results"=>nil}
   
The workflow_state of this document is "new", that means the documents has been put in the queue, ready to be rendered. To query the document, use the get_document method

  pdfthat.get_document(:id => "76f93970-0177-012d-4131-0026b0d759a2")
  
It'll return the same result as the create_document method.

    
== Note on Patches/Pull Requests
 
* Fork the project.
* Make your feature addition or bug fix.
* Add tests for it. This is important so I don't break it in a
  future version unintentionally.
* Commit, do not mess with rakefile, version, or history.
  (if you want to have your own version, that is fine but bump version in a commit by itself I can ignore when I pull)
* Send me a pull request. Bonus points for topic branches.

== Copyright

Copyright (c) 2010 mattallen. See LICENSE for details.
